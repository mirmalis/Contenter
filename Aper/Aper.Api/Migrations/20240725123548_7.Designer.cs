// <auto-generated />
using System;
using Aper.Api;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Aper.Api.Migrations
{
    [DbContext(typeof(Database))]
    [Migration("20240725123548_7")]
    partial class _7
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.6");

            modelBuilder.Entity("Aper.Models.Channel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Country")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("DateTime('now')");

                    b.Property<string>("Handle")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("Since")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("UploadsPlaylistId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Channel", (string)null);
                });

            modelBuilder.Entity("Aper.Models.Video", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("AuthorId")
                        .HasColumnType("TEXT");

                    b.Property<ulong?>("CommentCount")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("DateTime('now')");

                    b.Property<DateTime?>("LastChange_Stats")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("LastFieldChangedAt")
                        .HasColumnType("TEXT");

                    b.Property<ulong?>("LikeCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("PublishedAtRaw")
                        .HasColumnType("TEXT");

                    b.Property<ulong?>("ViewCount")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("Video", (string)null);
                });

            modelBuilder.Entity("Aper.Models.Videos.VideoField", b =>
                {
                    b.Property<string>("VideoId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Field")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("DateTime('now')");

                    b.Property<DateTime>("LatestChange")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LatestCheck")
                        .HasColumnType("TEXT");

                    b.Property<string>("Value")
                        .HasColumnType("TEXT");

                    b.HasKey("VideoId", "Field");

                    b.ToTable("VideoField");
                });

            modelBuilder.Entity("Aper.Models.Videos.VideoFieldChange", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Value")
                        .HasColumnType("TEXT");

                    b.Property<int>("VideoField")
                        .HasColumnType("INTEGER");

                    b.Property<string>("VideoFieldVideoId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("VideoFieldVideoId", "VideoField");

                    b.ToTable("VideoFieldChange");
                });

            modelBuilder.Entity("Aper.Models.Videos.Video_Status", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<ulong?>("CommentCount")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<ulong?>("DislikeCount")
                        .HasColumnType("INTEGER");

                    b.Property<ulong?>("FavoriteCount")
                        .HasColumnType("INTEGER");

                    b.Property<ulong?>("LikeCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("VideoId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<ulong?>("ViewCount")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("VideoId");

                    b.ToTable("Video_Status");
                });

            modelBuilder.Entity("Aper.Models.Video", b =>
                {
                    b.HasOne("Aper.Models.Channel", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId");

                    b.Navigation("Author");
                });

            modelBuilder.Entity("Aper.Models.Videos.VideoField", b =>
                {
                    b.HasOne("Aper.Models.Video", "Video")
                        .WithMany("Fields")
                        .HasForeignKey("VideoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Video");
                });

            modelBuilder.Entity("Aper.Models.Videos.VideoFieldChange", b =>
                {
                    b.HasOne("Aper.Models.Videos.VideoField", "Field")
                        .WithMany("Changes")
                        .HasForeignKey("VideoFieldVideoId", "VideoField")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Field");
                });

            modelBuilder.Entity("Aper.Models.Videos.Video_Status", b =>
                {
                    b.HasOne("Aper.Models.Video", "Video")
                        .WithMany("Statuses")
                        .HasForeignKey("VideoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Video");
                });

            modelBuilder.Entity("Aper.Models.Video", b =>
                {
                    b.Navigation("Fields");

                    b.Navigation("Statuses");
                });

            modelBuilder.Entity("Aper.Models.Videos.VideoField", b =>
                {
                    b.Navigation("Changes");
                });
#pragma warning restore 612, 618
        }
    }
}
