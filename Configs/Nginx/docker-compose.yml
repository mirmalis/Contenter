version: '3'
services:
  nginx:
    image: nginx
    container_name: nginx
    restart: always
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - './nginx.conf:/etc/nginx/nginx.conf'
      - './keys/:/etc/nginx/keys/'
      - '/mnt/data/website:/data'
      # - '/etc/letsencrypt/live/sars.lt:/etc/nginx/certs/sars.lt'
      # - '/etc/letsencrypt/live/api.sars.lt:/etc/nginx/certs/api.sars.lt'
    networks:
      - objectify-internal-network
  # razorapp:
  #   image: razorapp
  #   container_name: razorapp
  #   restart: always
  #   environment:
  #     - db_host=postgre1
  #     - db_name=db2
  #     - db_username=objectify
  #     - db_password=asdasd
  #   depends_on:
  #     - postgres
  #   networks:
  #     - objectify-internal-network
  # objectify:
  #   image: objectify
  #   container_name: api
  #   restart: always
  #   environment:
  #     - db_host=postgre1
  #     - db_name=db2
  #     - db_username=objectify
  #     - db_password=asdasd
  #   depends_on:
  #     - postgres
  #   networks:
  #     - objectify-internal-network
  # postgres:
  #   image: postgres:latest
  #   container_name: postgre1
  #   restart: always
  #   environment:
  #     POSTGRES_DB: db1
  #     POSTGRES_USER: admin
  #     POSTGRES_PASSWORD: aes824aes
  #   volumes:
  #     - /mnt/data/databases/postgre1:/var/lib/postgresql/data
  #   ports:
  #     - "5432:5432"
  #   networks:
  #     - objectify-internal-network

networks:
  objectify-internal-network:
  