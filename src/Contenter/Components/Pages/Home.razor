@page "/"
@inject Data.Database db
<PageTitle>Home</PageTitle>
@{
  var famName = Helpers.NameRetrievalExpression(16).Compile();
  var contentName = Helpers.NameRetrievalExpression(80).Compile();
}
Sukurti naują <a href="/c/contents/c">turinį</a>
| <a href="/p/personas/c">asmenį</a> 
| <a href="/c/fam/c">laidą</a>
.
<ExpList 
  ParamSource=@(
    this.db.Set<Contenter.Models.Contents.Content>()
    .Where(ct => ct.SourceAssignments.Any())
    .OrderByDescending(item => item.CreatedAt)
    .Select(ct => new {
      ct.Id,
      Name = ct.Name == null ? null : contentName(ct.Name),
      Fam = ct.FamId == null ? null : new {
        Id = ct.FamId!.Value,
        Name = famName(ct.Fam!.Name),
        //ct.Fam!.Name.Length > 4 ? ct.Fam!.Name.Substring(0, 4) + ".." : ct.Fam!.Name,
      },
      Sources = ct.SourceAssignments
      .OrderBy(item => item.Index)
      .Select(
        ass => new {
          Id = ass.Source.Id,
          ass.Source.Href,
          ass.Source.Flags,
          Definition = ass.Source.DefinitionUid == null ? null : new {
            Name = ass.Source.Definition!.Name,
            Platform = new {
              Id = ass.Source.PlatformId,
              ass.Source.Platform!.Name,
              ass.Source.Platform!.IconPath,
            }
          }
        }
      ),
      Guests = ct.GuestPersonaAssignments
      .OrderBy(item => item.Index)
      .Select(ass => new {
        Id = ass.GuestId,
        ass.Guest!.Name
      })
    })
  )
>
  <Wrapper Context="rows">
    <table class="bord">
      @rows
    </table>
  </Wrapper>
  <IfSome Context="model">
    <tr>
      <td>
        @if(model.Fam != null)
        {
          <a href="/c/fam/@model.Fam.Id">@model.Fam.Name</a>
        }
        else
        {
          <text>-</text>
        }
      </td>
      <td>
        <Name ParamHref="@($"/c/contents/{model.Id}")" ParamName="@model.Name"/>
      </td>
      <td>
        <OneOrMany ParamList=@model.Sources>
          <ChildContent Context="source">
            <AuthorizeView>
              <Authorized>
                <AIcon href=@source.Href DefinitionName=@source.Definition?.Name iconPath=@source.Definition?.Platform.IconPath PlatformId=@source.Definition?.Platform.Id PlatformName=@source.Definition?.Platform.Name Flags=source.Flags>
                    source
                  </AIcon>
              </Authorized>
              <NotAuthorized>
                @if(model.Fam != null && source.Flags.HasFlag(Models.Sources.SourceFlags.Paid)){
                  <a href="/c/fam/@model.Fam.Id/pay">
                    Mokamas
                  </a>
                } else
                {
                  <AIcon href=@source.Href DefinitionName=@source.Definition?.Name iconPath=@source.Definition?.Platform.IconPath PlatformId=@source.Definition?.Platform.Id PlatformName=@source.Definition?.Platform.Name Flags=source.Flags>
                    source
                  </AIcon>
                }
              </NotAuthorized>
            </AuthorizeView>
          </ChildContent>
        </OneOrMany>
      </td>
      <td>
        <OneOrMany ParamList=@model.Guests>
          <ChildContent Context="guest">
            <a href="/p/personas/@guest.Id">@guest.Name</a>
          </ChildContent>
        </OneOrMany>
      </td>
    </tr>
  </IfSome>
</ExpList>
