@inherits _Binder<Contenter.Models.Persons.Persona>
@rendermode InteractiveServer
@code {
  override protected async Task OnParametersSetAsync()
  {
    await base.OnParametersSetAsync();
  }
}
<EditForm Model=@this.model OnValidSubmit=@this.OnValidSubmit FormName="create">
  <DataAnnotationsValidator />
  <FluentValidationSummary />

  <FluentStack Orientation="@Orientation.Vertical">
    <div>
      <FluentTextField @bind-Value=@this.model.Name Label="Name" Required />
    </div>
    <div>
      <FluentTextArea @bind-Value=@this.model.Description Label="Description" Required="false" />
    </div>
    <div>
      @if(this.model.Links != null)
      {
        <StringListmanager @bind-list=@this.model.Links />
      }
      <FluentButton OnClick=@(() => {
        this.model.Links ??= [];
        this.model.Links.Add(string.Empty);
      })> Add link
      </FluentButton>
    </div>
    @if (ChildContent != null)
    {
      <FluentButton Type=@ButtonType.Submit Appearance=@Appearance.Accent>@ChildContent</FluentButton>
    }
  </FluentStack>
</EditForm>

@if (!string.IsNullOrWhiteSpace(this.model.Name))
{
  <ExpList 
    ParamSource=@(
      this.db.Personas
      .Where(item => item.Name == this.model.Name)
      .Select(persona => new GuestView {
        Id = persona.Id,
        Name = persona.Name,
      })
    )
  >
    <Wrapper Context="rows">
      <div>
        Asmenys su tuo pačiu vardu: 
        <ul>@rows</ul>
      </div>
    </Wrapper>
    <IfSome Context="persona">
      <li>
        <InnerLinkPersona Model=@persona />
      </li>
    </IfSome>
    <IfNone>no duplicates</IfNone>
  </ExpList>
}
