@rendermode InteractiveServer
@inject Contenter.Brokers.Sources.ISourceBroker sourcebroker
@using Contenter.Models.Views
@using Contenter.Views.Bases
@code {
  [Parameter]
  public int Skip { get; set; } = 0;
  [Parameter]
  public int Take { get; set; } = 20;

  [Parameter]
  public Func<Contenter.Models.Sources.Source, bool> FilterExpression { get; set; } = source => true;

  [Parameter]
  public bool ParamNoContent { get; set; } = false;
  [Parameter]
  public bool ParamForMainPage { get; set; } = false;
  private System.Linq.Expressions.Expression<Func<Contenter.Models.Sources.Source, bool>> filterFunc()
  {
    if (ParamNoContent)
      return s => s.ContentId == null && !s.Flags.HasFlag(Models.Sources.SourceFlags.DoesntHaveContentIntentionally);
    if (ParamForMainPage)
      return s => !s.Flags.HasFlag(Models.Sources.SourceFlags.HiddenFromMain);
    return s => true;
  }
}
@inject Contenter.Data.Database db
<MyLoader 
  Skip=@this.Skip
  Take=@this.Take
  ParamSource=@(
    this.db.Sources
    
    .Where(filterFunc())
    .OrderByDescending(item => item.CreatedAt)
    .Select(s => new SourceView {
      Id = s.Id,
      Href = s.Href,
      Name = s.Name,
      IconPath = s.PlatformId == null ? null : s.Platform!.IconPath,
      Channel = s.ChannelUid == null ? null : new ChannelView(){
        Id = s.Channel!.Id,
        Name = s.Channel.Title ?? s.Channel.Name ?? s.Channel.Handle,
        IconPath = s.Channel.Platform.IconPath ,
        Href = s.Channel.Href,
      },
      Content = s.ContentId == null ? null : new ContentView {
        Sources = null,
        Id = s.ContentId!.Value,
        Name = s.Content!.Name,
        Fam = s.Content.FamId == null ? null : new FamView {
          Id = s.Content.Fam!.Id,
          Name = s.Content.Fam.Name,
        },
        Guests = s.Content.GuestPersonaAssignments.OrderBy(item => item.IndexA).Select(gass => new GuestView {
          Id = gass.GuestId,
          Name = gass.Guest.Name,
        })
      }
    })
  )>
  <Wrapper Context="rows">
    <table class="bord">@rows</table>
  </Wrapper>
  <IfSome Context="model">
    <tr>
      <td>
        @if (model.Channel != null)
        {
          <AnchorBase MaxLength="16" href=@($"/s/channels/{model.Channel.Id}") Text="@model.Channel.Name"></AnchorBase>
        }
      </td>
      <td>
        <OuterLinkSource Model=@model />
      </td>
      <td>
        @if (model.Content != null)
        {
          @if (model.Content.Fam != null)
          {
            <AnchorBase MaxLength="20" Text="@model.Content.Fam.Name" href=@($"/c/contents/{model.Content.Id}") />
          } else
          {
            <a href="/c/contents/@model.Content.Id" class="no-name">no-show</a>
            
          }
          @if (model.Content.Guests.Any())
          {
            <text> &raquo; </text>
            <OneOrMany ParamList=@model.Content.Guests Context="guest">
              <a href="/p/personas/@guest.Id">@guest.Name</a>
            </OneOrMany>
          }
        }
      </td>
      <td>
        <a href="/s/sources/@model.Id">Details</a>
        <AuthorizeView Policy="AdminSuper">
          <Authorized>
            | <a href="/edit/s/sources/@model.Id">Edit</a>
            | <a href="/delete/s/sources/@model.Id">Delete</a>
          </Authorized>
        </AuthorizeView>
      </td>
    </tr>
  </IfSome>
</MyLoader>
