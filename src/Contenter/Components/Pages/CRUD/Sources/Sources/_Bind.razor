@inherits _Binder<Contenter.Models.Sources.Source>
@rendermode InteractiveServer
<EditForm Model=@this.model OnValidSubmit=@this.OnValidSubmit FormName="create">
  <DataAnnotationsValidator />
  <FluentValidationSummary />

  <FluentStack Orientation="@Orientation.Vertical">
    <div>
      <EFSelect Label="Platform" value=@this.model.Platform valueChanged=@((Models.Sources.SourcePlatform val) => {
        this.model.Platform = val;
        this.model.Channel = null;
        this.model.Definition = null;
      }) />
      <FluentTextField Value=@this.model.Href ValueChanged="@(async href => await this.SetHref(href))" Label="Href" Required Style="width:100%;" />
      @if(!string.IsNullOrWhiteSpace(this.model.Href))
      {
        <FluentButton OnClick=@(async () => {
          await this.SetHref(this.model.Href);
          this.StateHasChanged();
        })>Try get data
        @(this.model.Platform?.Id ?? this.model.PlatformId)
        </FluentButton>
      }
        
      @if (this.model.Href != null)
      {
        @if (this.model.Platform != null || this.model.PlatformId != null)
        {
          <EFSelect Label="Definition"
                    ParamSource=@(db => this.db.Entry(this.model.Platform!).Collection(pl => pl.Definitions).Query())
                    @bind-value=@this.model.Definition/>
          @* <EFSelect Label="Channel"
                    ParamSource=@(db => this.db.Entry(this.model.Platform!).Collection(pl => pl.Channels).Query())
                    @bind-value=@this.model.Channel 
          /> *@
          <FluentInputLabel Label="Channel: ">
            @if (this.model.Channel != null)
            {
              <FluentButton OnClick=@(() => this.model.Channel = null)>
                @this.model.Channel?.Name
              </FluentButton>
            } else 
            {
              <ChooseChannel @bind-value=@this.model.Channel MinTermLength="2" ParamPlatform="@this.model.Platform" />
            }
          </FluentInputLabel>
        }
        <FluentTextField @bind-Value=@this.model.Name Label="Name" Style="width:100%;" />
        <FluentDatePicker @bind-Value=@this.model.PublishedAt Label="Published at" />
        <FluentTimePicker @bind-Value=@this.model.PublishedAt />
      }
    </div>
    <div>
      @if(this.model.Content == null)
      {
        <text>Initialize Content: </text>
        <FluentButton Appearance="@Appearance.Accent"
          OnClick="@(async () => await this.InitializeContent(null))" >
          None
        </FluentButton>
        @if (model.Channel?.Id  != null)
        {
          <ExpList 
            ParamSource=@(
              this.db.Channels
              .Where(item => item.Id == model.Channel.Id)
              .SelectMany(ch => 
                ch.CotentFamsAssignments
                .OrderBy(item => item.IndexB)
                .Select(ass => new {
                  ass.ContentFam.Id,
                  ass.ContentFam.Name,
                })
              )
            )
          >
            <IfSome Context="fam">
              <FluentButton Appearance="@Appearance.Accent" OnClick="@(async () => await this.InitializeContent(fam.Id))">
                @fam.Name
              </FluentButton>
            </IfSome>
          </ExpList>
        }
      } else
      {
        <text>Content: </text>
        <FluentButton IconStart="@(new Icons.Regular.Size20.Delete())" OnClick=@(() => this.model.Content = null)></FluentButton>
        <div style="border: solid 1px grey;">
          <Contenter.Components.Pages.CRUD.Contents.Contents._Bind
            model=@model.Content
            OnValidSubmitCallback=@(val => model.Content = val)
          />
        </div>
        
      }
    </div>
    @if (ChildContent != null)
    {
      <ExpList ParamSource=@(this.db.Sources.Where(item => item.Id != this.model.Id && item.Href == this.model.Href).Select(item => new {item.Id, item.Name}))>
        <Wrapper Context="rows">
          <div>
            Sources with same Href:
            <ul>@rows</ul>
          </div>
        </Wrapper>
        <IfSome Context="s">
          <li>
            <a href="/edit/s/sources/@s.Id">@(s.Name ?? "Edit")</a>
          </li>
        </IfSome>
        <IfNone>
          <div>
            <FluentButton Type=@ButtonType.Submit Appearance=@Appearance.Accent>@ChildContent</FluentButton>
          </div>
        </IfNone>
      </ExpList>
    }
  </FluentStack>
</EditForm>
