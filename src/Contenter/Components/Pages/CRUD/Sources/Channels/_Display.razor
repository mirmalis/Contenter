@inherits _Displayer<Contenter.Models.Sources.Channel, Guid>
@rendermode InteractiveServer
<ExpList
  ParamExpectedCount="1"
  ParamSource=@(
    this.Source.Select(item => new {
      item.Id,
      item.Title,
      item.Name,
      item.Handle,
      item.Uid,
      item.Href,
      Platform = new {
        Id = item.PlatformId,
        item.Platform.Name,
        item.Platform.IconPath,
        item.Platform.ChannelName,
      },
      ContentFams = item.CotentFamsAssignments.OrderBy(item => item.IndexB).Select(ass => new {
        ass.ContentFam.Id,
        ass.ContentFam.Name,
      })
    })
  )
>
  <IfSome Context="model">
    <FluentStack Orientation="Orientation.Horizontal" HorizontalGap="4">
      @{
        var name = model.Title ?? model.Name ?? model.Handle;
      }
      @if (string.IsNullOrEmpty(model.Href))
      {
        <text>
          @model.Platform.Name
          @model.Platform.ChannelName
          @if(!string.IsNullOrWhiteSpace(name))
          {
            <u>@name</u>
          }
        </text>
      }
      else
      {
        <Contenter.Views.Bases.AnchorBase IconStart=@model.Platform.IconPath href=@model.Href NewTab Text=@name  />
      }
      
    </FluentStack>
    @Before
    <div>
      <FluentSelect TOption=@((XX, Guid?))>
        <FluentOption OnSelect=@(() => this.ChangeFilter(XX.All, null))>All</FluentOption>
        @foreach (var fam in model.ContentFams)
        {
          <FluentOption OnSelect=@(() => this.ChangeFilter(XX.SpecificFam, fam.Id))>
            <b>@fam.Name</b>
          </FluentOption>
        }
        <FluentOption OnSelect=@(() => this.ChangeFilter(XX.NoContentOrNoFam, null))>
          <b>Nepriskirti</b>
        </FluentOption>
        <FluentOption OnSelect=@(() => this.ChangeFilter(XX.BeContent, null))>Nesutvarkyti</FluentOption>
        <FluentOption OnSelect=@(() => this.ChangeFilter(XX.NepriskirtiFamai, null))>Klaidos</FluentOption>
      </FluentSelect>
      @if (this.X == XX.SpecificFam && this.FamId != null)
      {
        <a href="/c/fam/@this.FamId">open</a>
      }
    </div>
    @if (this.ShowAll)
    {
      <MyLoader @ref=@this.SourcesLoader
        ParamSource=@(
          this.db.Sources
          .Where(item => item.Channel != null && item.Channel.Id == this.Id)
          .Where(this.ChannelContentFilter(model.ContentFams.Select(item => item.Id).ToList()))
          .OrderByDescending(item => item.PublishedAt)
          .Select(source => new SourceView {
            Channel = null,
            Id = source.Id,
            PublishedAt = source.PublishedAt == null ? null : source.PublishedAt,
            Href = source.Href,
            Name = source.Name,
            DefinitionUid = source.DefinitionUid,
            IconPath = source.PlatformId == null ? null : source.Platform!.IconPath,
            Content = source.ContentId == null ? null : new ContentView {
              Sources = null,
              Id = source.Content!.Id,
              Name = source.Content.Name,
              Fam = source.Content.FamId == null ? null : new FamView {
                Id = source.Content.Fam!.Id,
                Name = source.Content.Fam.Name,
              },
              Guests = source.Content.GuestPersonaAssignments
              .OrderBy(item => item.IndexA)
              .Select(ass => new PersonaView {
                Id = ass.Guest.Id,
                Name = ass.Guest.Name,
              })
            }
          })
        )>
        <Wrapper Context="rows">
          <table class="bord">@rows</table>
        </Wrapper>
        <IfSome Context="source">
          <tr>
            <td>@source.PublishedAt?.ToShortDateString()</td>
            <td>
              <InnerLinkSource Model=@source Name="Details" />
              <AuthorizeView Policy="AdminSuper">
                <Authorized>
                  | <a href="/edit/s/sources/@source.Id">Edit</a>
                  | <a href="/delete/s/sources/@source.Id">Delete</a>
                </Authorized>
              </AuthorizeView>
            </td>
            <td>
              <OuterLinkSource Model=@source Name=@source.DefinitionUid />
            </td>
            @if (source.Content == null || this.X == XX.BeContent)
            {
              <td colspan="@(2 + (this.X == XX.SpecificFam ? 0 : 1)) ">
                <InnerLinkContentCreate ParamSourceId=@source.Id Name="Create" />
                &raquo;
                @source.Name
              </td>
            } else
            {
              @if(this.X != XX.SpecificFam)
              {
                <td>
                  <InnerLinkFam Model=@source.Content.Fam />
                </td>
              }
              <td><InnerLinkContent Model=@source.Content /></td>
              <td>
                <OneOrMany ParamList=@source.Content.Guests Context="guest">
                  <ChildContent>
                    <InnerLinkPersona Model=@guest />
                  </ChildContent>
                  <IfNone></IfNone>
                </OneOrMany>
              </td>
            }
          </tr>
        </IfSome>
      </MyLoader>
    }
    @After
  </IfSome>
</ExpList>
