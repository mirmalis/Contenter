@inherits _Displayer<Contenter.Models.Contents.Content, Guid>

<ExpList
  ParamExpectedCount="1"
  ParamSource=@(
    this.Source.Select(item => new {
      item.Name,
      item.PublishedAt,
      Fam = item.FamId == null ? null : new {
        Id = item.FamId!.Value,
        item.Fam!.Name,
      },
      Guests =  item.GuestPersonaAssignments.OrderBy(item => item.IndexB)
      .Select(ass => new {
        Id = ass.GuestId,
        ass.Guest.Name,
      }),
      Sources = item.Sources.Select(source => new {
        Id = source.Id,
        source.Href,
        source.Name,
        source.Flags,
        Channel = source.ChannelUid == null ? null : new {
          source.Channel!.Id,
          Name = source.Channel.Title ?? source.Channel.Name,
        },
        Definition = source.Definition == null ? null : new {
          source.Definition.Name,
          Platform = new {
            source.Definition.Platform.Id,
            source.Definition.Platform.Name,
            source.Definition.Platform.IconPath,
          }
        }
      })
    })
  )
>
  <IfSome Context="model">
    <PageTitle>Content: @model.Name - sars.lt</PageTitle>
    <FluentStack Orientation="Orientation.Horizontal" HorizontalGap="4">
      @if (model.Fam != null)
      {
        <a href="/c/fam/@model.Fam.Id">@model.Fam.Name</a>
        <text> &raquo; </text>
      }
      <Name ParamName=@model.Name />
    </FluentStack>
    @Before
    @if (model.PublishedAt != null)
    {
      <div>
        Published: @model.PublishedAt.Value.ToShortDateString()
      </div>
    }
    <div>
      Guests: 
      <OneOrMany ParamList=@(model.Guests) Context="guest">
        <a href="/p/personas/@guest.Id">@guest.Name</a>
      </OneOrMany>
    </div>
    <div>
      Sources (<a href="/create/s/sources?ContentId=@this.Id">add</a>): 
      <OneOrMany ParamList=@(model.Sources) Context="source">
        <ChildContent>
          @if (source.Channel != null)
          {
            <a href="/s/channels/@source.Channel.Id">@source.Channel.Name</a> 
            <text> &raquo; </text>
          }
          <a href="/s/sources/@source.Id">@source.Name</a>
          <AuthorizeView>
            <Authorized>
              <AIcon href=@source.Href DefinitionName=@source.Definition?.Name iconPath=@source.Definition?.Platform.IconPath PlatformId=@source.Definition?.Platform.Id PlatformName=@source.Definition?.Platform.Name Flags=source.Flags>
                source
              </AIcon>
            </Authorized>
            <NotAuthorized>
              @if (model.Fam != null && source.Flags.HasFlag(Models.Sources.SourceFlags.Paid))
              {
                <a href="/c/fam/@model.Fam.Id/pay">
                  Mokamas
                </a>
              }
              else
              {
                <AIcon href=@source.Href DefinitionName=@source.Definition?.Name iconPath=@source.Definition?.Platform.IconPath PlatformId=@source.Definition?.Platform.Id PlatformName=@source.Definition?.Platform.Name Flags=source.Flags>
                  source
                </AIcon>
              }
            </NotAuthorized>
          </AuthorizeView>
        </ChildContent>
      </OneOrMany>
    </div>
    @After
  </IfSome>
</ExpList>
