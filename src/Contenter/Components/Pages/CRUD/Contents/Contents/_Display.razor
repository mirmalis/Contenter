@inherits _Displayer<Contenter.Models.Contents.Content, Guid>
@code {
  [Parameter]
  public Guid? CallerSourceId { get; set; }

  [Parameter]
  public bool LinkToSelf { get; set; }
}
<ExpList
  ParamExpectedCount="1"
  ParamSource=@(
    this.Source
    .Select(item => new {
      item.Name,
      item.PublishedAt,
      Fam = item.FamId == null ? null : new FamView {
        Id = item.FamId!.Value,
        Name = item.Fam!.Name,
      },
      Guests =  item.ThingAssignments
        .OrderBy(item => item.IndexB)
        .Select(ass => new ThingView {
          Id = ass.GuestId,
          Name = ass.Guest.Name,
          Definition = new (){
            Id = ass.Guest.ThingDefinitionId,
            Name = ass.Guest.ThingDefinition!.Name,
            PluralName = ass.Guest.ThingDefinition.Plural
          }
        }),

      Sources = item.Sources
        .Where(item => this.CallerSourceId == null || item.Id != this.CallerSourceId)
        .OrderBy(item => item.PublishedAt)
        .Select(source => new SourceView () {
          Id = source.Id,
          Href = source.Href,
          Name = source.Name,
          PublishedAt = source.PublishedAt,
          Channel = source.ChannelUid == null ? null : new ChannelView {
            Id = source.Channel!.Id,
            Name = source.Channel.Title ?? source.Channel.Name,
            IconPath = source.Channel!.Platform.IconPath,
            Href = source.Channel.Href,
          },
          Content = null,
          IconPath = source.PlatformId == null ? null : source.Platform!.IconPath,
          DefinitionUid = source.DefinitionUid,
        }),
    })
  )
>
  <IfSome Context="model">
    <PageTitle>Content: @model.Name - sars.lt</PageTitle>

    <FluentStack Orientation="Orientation.Horizontal" HorizontalGap="4">
      <InnerLinkFam Model=@model.Fam After />
      @if (this.LinkToSelf)
      {
        <InnerLinkContent Name="@model.Name" Id=@this.Id />
      } else
      {
        <Name ParamName=@model.Name />
      }
      
    </FluentStack>
    @Before
    @if (model.PublishedAt != null)
    {
      <div>
        Published: @model.PublishedAt.Value.ToShortDateString()
      </div>
    }
    <div>
      Sources (<a href="/create/s/sources?ContentId=@this.Id">add</a>): 
      <Contenter.Components.Pages.CRUD.Sources.Sources.ViewSources List=@model.Sources />
    </div>
    <hr/>
    <ContentThings ContentId=@this.Id Expanded />
    @After
  </IfSome>
</ExpList>
