@inherits _Binder<Contenter.Models.Contents.ContentFam>
@rendermode InteractiveServer
@code {
  override protected async Task OnParametersSetAsync()
  {
    await base.OnParametersSetAsync();
  }
}
<EditForm Model=@this.model OnValidSubmit=@this.OnValidSubmit FormName="create">
  <DataAnnotationsValidator />
  <FluentValidationSummary />

  <FluentStack Orientation="@Orientation.Vertical">
    <div>
      <FluentTextField @bind-Value=@model.Name Label="Name" Required />
    </div>
    <div>
      Associated Channels:
      <EFSelect T="@Contenter.Models.Sources.Channel"
        value=null 
        valueChanged=@(val => {
          if(val == null)
            return;
          this.model.SourceChannelsAssignments ??= [];
          var ind = this.model.SourceChannelsAssignments.Any() ? this.model.SourceChannelsAssignments.Select(item => item.IndexA).Max() + 1 : 1;
          this.model.SourceChannelsAssignments.Add(
            new() {
              IndexA = ind,
              IndexB = 1,
              Channel = val,
            }
          );
        })
      />
      <Listmanager
        @bind-list=@this.model.SourceChannelsAssignments
        Context="ass"
      >
        <td>@ass.Channel</td>
      </Listmanager>
    </div>
    @if (ChildContent != null)
    {
      <FluentButton Type=@ButtonType.Submit Appearance=@Appearance.Accent>@ChildContent</FluentButton>
    }
  </FluentStack>
</EditForm>

@code {
  private string nextPayLink { get; set; } = string.Empty;
}
