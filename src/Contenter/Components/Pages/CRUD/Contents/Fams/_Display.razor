@inherits _Displayer<Contenter.Models.Contents.ContentFam, Guid>

<ExpList
  ParamExpectedCount="1"
  ParamSource=@(
    this.Source.Select(item => new {
      item.Name,
      Channels = item.SourceChannelsAssignments
      .OrderBy(item => item.IndexA)
      .Select(ass => new ChannelView {
        Id = ass.Channel.Id,
        Name = ass.Channel.Title ?? ass.Channel.Name,
        IconPath = ass.Channel.Platform.IconPath,
        Href = ass.Channel.Href,
      }),
      Contents = item.Contents
      .OrderByDescending(item => item.PublishedAt)
      .Select(ct => new {
        Id = ct.Id,
        Name = ct.Name,
        PublishedAt = ct.PublishedAt,
        Things = ct.GuestPersonaAssignments.OrderBy(ass => ass.IndexB)
        .Select(gass => new ThingView {
          Id = gass.Guest.Id,
          Name = gass.Guest.Name,
          Definition = new (){
            Id = gass.Guest.ThingDefinitionId,
            Name = gass.Guest.ThingDefinition!.Name,
            PluralName = gass.Guest.ThingDefinition.Plural
          }
        })
        ,
        Sources = ct.Sources
        .Select(source => new SourceView {
          Id = source.Id,
          Href = source.Href,
          IconPath = source.PlatformId == null ? null : source.Platform!.IconPath,
          Name = source.Name,
          DefinitionUid = source.DefinitionUid,
          Channel = null ,
          //new ChannelView{
          //},
          Content = null,
          //Href = source.Href,
          //Definition = source.Definition == null ? null : new {
          //  source.Definition.Name,
          //  Platform = new {
          //    source.Definition.Platform.Id,
          //    source.Definition.Platform.Name,
          //    source.Definition.Platform.IconPath,
          //  }
          //}
        })
      })
    })
  )
>
  <IfSome Context="model">
    <PageTitle>@model.Name - sars.lt</PageTitle>
    <FluentStack Orientation="Orientation.Horizontal" HorizontalGap="4">
      @model.Name
    </FluentStack>
    @Before
      @if (model.Channels.Any())
      {
        <div>
          Channels: 
          <table>
            @foreach(var ch in model.Channels)
            {
              <tr>
                <td>
                  <InnerLinkChannel Model=@ch />
                </td>
                <td>
                  <Contenter.Views.Bases.AnchorBase IconStart=@ch.IconPath href=@ch.Href Text=@("open") NoText="" NewTab />
                </td>
              </tr>
            }
          </table>
        </div>
      }
    <div>
      Contents (<a href="/create/c/contents?FamId=@this.Id">add</a>):
      @if (model.Contents.Any())
      {
        <table class="bord">
          @foreach(var ct in model.Contents)
          {
            <tr>
              <td>@ct.PublishedAt?.ToShortDateString()</td>
              <td>
                <Name ParamHref=@($"/c/contents/{ct.Id}") ParamName="@ct.Name" />
              </td>
              <td>
                <Contenter.Components.Pages.CRUD.Objectify.Things.ViewThings List=@ct.Things />
              </td>
              <td>
                <Contenter.Components.Pages.CRUD.Sources.Sources.ViewSources List=@ct.Sources />
              </td>
            </tr>
          }
        </table>
      }
      else
      {
        <span class="muted">none</span>
      }
    </div>
    @After
  </IfSome>
</ExpList>
