@typeparam T
@code {
  [EditorRequired]
  [Parameter]
  public IEnumerable<T>? ParamList { get; set; }

  [Parameter]
  public RenderFragment<RenderFragment> WrapperOfAll { get; set; } = fragment => fragment;
  [Parameter]
  public RenderFragment<T> ChildContent { get; set; } = item => @<text>@item!.ToString()</text>;

  [Parameter]
  public RenderFragment? IfNone { get; set; } = @<span class="muted">None</span>;

  [Parameter]
  public RenderFragment? Before { get; set; }
  
  [Parameter]
  public RenderFragment? After { get; set; }

  [Parameter]
  public bool Many { get; set; } = false;
}

@if (this.ParamList != null && this.ParamList.Any())
{
  @Before
  @WrapperOfAll(
    @:@{
    @if (!this.Many && this.ParamList.Count() == 1)
    {
      @ChildContent(this.ParamList.First())
    }
    else
    {
      <ul>
        @foreach (var item in this.ParamList)
        {
          <li>
            @ChildContent(item)
          </li>
        }
      </ul>
    }
    }
  )
  @After
}
else
{
  @this.IfNone
}
