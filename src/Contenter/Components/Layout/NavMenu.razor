@rendermode InteractiveServer

@implements IDisposable

@inject NavigationManager NavigationManager

<div class="navmenu">
  <input type="checkbox" title="Menu expand/collapse toggle" id="navmenu-toggle" class="navmenu-icon" />
  <label for="navmenu-toggle" class="navmenu-icon"><FluentIcon Value="@(new Icons.Regular.Size20.Navigation())" Color="Color.Fill" /></label>
  <nav class="sitenav" aria-labelledby="main-menu" onclick="document.getElementById('navmenu-toggle').click();">
    <FluentNavMenu Id="main-menu" Collapsible="true" Width="250" Title="Navigation menu" @bind-Expanded="expanded">
      <FluentNavLink Href="/" Match="NavLinkMatch.All" Icon="@(new Icons.Regular.Size20.Home())" IconColor="Color.Accent">Home</FluentNavLink>
      <FluentNavLink Href="/fams" Match="NavLinkMatch.All" Icon="@(new Icons.Regular.Size20.DatabaseLink())" IconColor="Color.Accent">Laidos</FluentNavLink>
      <FluentNavLink Href="/channels" Match="NavLinkMatch.All" Icon="@(new Icons.Regular.Size20.DatabaseMultiple())" IconColor="Color.Accent">Channels</FluentNavLink>
      <FluentNavLink Href="/personas" Match="NavLinkMatch.All" Icon="@(new Icons.Regular.Size20.DatabasePerson())" IconColor="Color.Accent">Personas</FluentNavLink>
      <FluentNavLink Href="/bookmarklets" Match="NavLinkMatch.All" Icon="@(new Icons.Regular.Size20.BookmarkAdd())" IconColor="Color.Accent">Bookmarklets</FluentNavLink>

      @* <FluentNavLink Href="counter" Icon="@(new Icons.Regular.Size20.NumberSymbolSquare())" IconColor="Color.Accent">Counter</FluentNavLink> *@
      @* <FluentNavLink Href="weather" Icon="@(new Icons.Regular.Size20.WeatherPartlyCloudyDay())" IconColor="Color.Accent">Weather</FluentNavLink> *@
      <AuthorizeView>
        <Authorized>
          <FluentNavLink Href="auth" Icon="@(new Icons.Regular.Size20.LockClosedKey())" IconColor="Color.Accent">Auth Required</FluentNavLink>
          <FluentNavLink Icon="new Icons.Regular.Size16.PersonSettings()" Href="Account/Manage">@context.User.Identity?.Name</FluentNavLink>
          <form action="Account/Logout" method="post">
            <AntiforgeryToken />
            <input type="hidden" name="ReturnUrl" value="@currentUrl" />
            <FluentButton IconStart="@(new Icons.Regular.Size16.PersonArrowLeft())" Type="ButtonType.Submit" Style="width: 100%;"></FluentButton>
          </form>
        </Authorized>
        <NotAuthorized>
          <FluentNavLink Icon="@(new Icons.Regular.Size16.PersonAdd())" Href="Account/Register">Register</FluentNavLink>
          <FluentNavLink Icon="@(new Icons.Regular.Size16.PersonArrowRight())" Href="Account/Login">Login</FluentNavLink>
        </NotAuthorized>
      </AuthorizeView>
    </FluentNavMenu>
  </nav>
</div>

@code {
  private bool expanded = false;
  private string? currentUrl;

  protected override void OnInitialized()
  {
    currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
    NavigationManager.LocationChanged += OnLocationChanged;
  }

  private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
  {
    currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
    StateHasChanged();
  }

  public void Dispose()
  {
    NavigationManager.LocationChanged -= OnLocationChanged;
  }
}
