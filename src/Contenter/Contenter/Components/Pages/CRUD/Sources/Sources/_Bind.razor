@inherits _Binder<Contenter.Models.Sources.Source>
@rendermode InteractiveServer
@code {
  override protected async Task OnParametersSetAsync()
  {
    await base.OnParametersSetAsync();
  }
}
<EditForm Model=@this.model OnValidSubmit=@this.OnValidSubmit FormName="create">
  <DataAnnotationsValidator />
  <FluentValidationSummary />

  <FluentStack Orientation="@Orientation.Vertical">
    <div>
      <EFSelect Label="Definition"
                ParamSource=@(db => db.Set<Contenter.Models.Sources.SourceDefinition>().Include(item => item.Platform))
                @bind-value=@this.model.Definition>
        <ItemTemplate Context="sd">
          @if (sd != null)
          {
            <Icon ShowPlatformName DefinitionName=@sd.Name iconPath=@sd.Platform.IconPath PlatformName=@sd.Platform.Name PlatformId=@sd.PlatformId>
              ??
            </Icon>
          }
          else
          {
            <text>null</text>
          }
        </ItemTemplate>
      </EFSelect>
      <FluentTextField @bind-Value=@this.model.Href  Label="Href" Required />
    </div>
    <div>
      Contents:
      @if (model.ContentAssignments.Any())
      {
        <table class="bord">
          <tr>
            <th>Index</th>
            <th>Content</th>
          </tr>
          @foreach (var ass in model.ContentAssignments)
          {
            <tr>
              <td>@ass.Index</td>
              <td>
                <Name ParamName=@ass.Content.Name />
              </td>
            </tr>
          }
        </table>
      }
    </div>
    <div>

    </div>
    @if (ChildContent != null)
    {
      <FluentButton Type=@ButtonType.Submit Appearance=@Appearance.Accent>@ChildContent</FluentButton>
    }
  </FluentStack>
</EditForm>
